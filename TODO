Steps:
- Create default sphinx.conf.
- Install it in a default location. That's in the web space.
  Install a default index. This default index has a bit of the site. That's in the local state folder.
- Start the daemon, probably through the crontab on reboot, or better by the web process. 
- Do a small indexing operation on some dummy text.
- Do log rotation.
- Create the search.php.
- Present the search results.
- Make the links clickable correctly.
- Expand by indexing the notes.
- Expand by indexing the Bible text.
- Expand by indexing all the menu files.
- Can charset_table in sphinx.conf be automatically generated, or be left out?






Search really everything: Bibles, notes, menus, webpages.

Use the information gathered during the trips in the train.

Settings for sphinxsearch are stored in the database, including the port number, and collapsing data.
The advantage is that the text-based files will not be overwritten after installation.
The sphinx configuration is saved just before the indexer starts.

The search results should be made extremely clear to see:
New lines are displayed as such.
Bible / Book / Chapter / Verse number in green.

It uses the main+delta indexing scheme for nearly realtime indexing.
Indexes the stuff at midnight into the main index.
Whenever something changes, a note or text, it indexes that in the delta index.

It indexes the notes from the database.
It indexes the text from the database, but this needs to be converted to html, or just to take the usfm out.
It indexes the standard pages of the website.











Provide information about how to create a searchable site, and how to separate the logic from the bibledit-web software.







Gtk3
http://developer.gnome.org/gtk3/stable/gtk-migrating-2-to-3.html
http://developer.gnome.org/gtk/2.24/

Do not include individual headers: Done.
Do not use deprecated symbols: Done.
Use accessor functions instead of direct access: Done.
Replace GDK_<keyname> with GDK_KEY_<keyname>: Done.















Produce, in 'members', and from outside, a searchable version, like the SC manuals.
Steps:
Improve the web version using code from the linked web version.
Each chapter gets a list of clickable parents at the top.
The Bible gets a list of Bible books, clickable.
Each book gets a list of clickable chapters.
Each chapter gets a list of clickable verses.
Every page gets a few anchors: Clickable Logo, Bible name, search entry.
Perhaps to have a switch on the site whether to enable / disable the search functions.
Use sphinxsearch
Crontab starts the search daemon, or ensures that it runs.









Make NDB and SHN Bibles searchable on the site. Version to TBS, and revised version.








Link the notes in Bibledit-Gtk to the notes in Bibledit-Web:
- No changes to Bibledit-Gtk
- Bibledit-Web accesses the git repository of Bibledit-Gtk's notes.
- bibledit-web gets logic that link the repository to the notes database.
- When doing send/receive on those notes, the output is taken, and processed, and actions taken.







BibleWorks -> eSword options: 
- Expand with html or rtf formatting and notes - this is done per line, not per chapter.
- Add some online help about how it works.


Convert USFM to USFX:
- Download and unzip http://haiola.org/haiola.zip
- Install mono-complete 
- Run mono usfm2usfx.exe -o output.xml *.usfm

