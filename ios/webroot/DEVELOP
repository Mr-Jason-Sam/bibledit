This is going to be a version of Bibledit that runs on all relevant platforms.

The developer transforms Bibledit-Web, written in PHP, with minimal effort, into C++.

A main reason is that PHP is not well suited to the mobile platforms like Android and in particular iOS.
On iOS it was possible to compile stock PHP without errors, 
but newer versions of PHP, like 5.6, crashed, 
and older versions, like 5.4 left out symbols which crippled the library.
When everything is written in C or in C++, it can be compiled for the mobile devices without problems.

Another reason for switching to C++ is that when it runs on a server,
it requires less server memory and places a lower demand on the CPU.
And such a server is less expensive to rent.
And for mobile platforms, the battery will last longer.
According to one benchmark, PHP is 5461% slower than C++.

Other developers and other companies also switch from PHP to C++ for 
reasons of making it cross-platform and for going beyond what PHP can do.

For mobile platforms it is easier to include all dependent libraries in source form.
For example, include sqlite.h and sqlite.c to get SQLite support.

Platform iOS needs static libraries so libbibledit.a needs to be a static library.

The Bibledit library runs a webserver.

Since Bibledit is going to run as a server, it may run for years without interruption.
Therefore it is imperative that it leaks no memory at all.
Keep it valgrind clean.

Porting to Windows was done in Visual Studio.
The library compiles well through gcc.
It also compiles in Visual Studio, but the library crashes with a segmentation error.
It is assumed that the cause is that the stack pointer gets mixed up.
The solution that is taken is this:
1. Compile the library plus console program on Windows within Cygwin.
2. Write a GUI in C#: It calls the console app with the library.

An important reason for moving from a LAMP stack to a self-contained Bibledit
version written in C++ is this: A LAMP stack has many option to run
shell commands and has options for security holes.
The self-contained version is offers hardly any options for security holes.
Thus the server is expected to be more secure.

Libcurl may not be available easily on all types of tablets.
Therefore it can be used for operations essential to servers, but not essential to smaller clients.
