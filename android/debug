#!/bin/bash


# Run this script from the directory where it is located: ./debug.
# Prerequisites:
# Android SDK for Mac OS X.
# Apache Ant: port install apache-ant.


# Export environment variables to find the Android SDK and NDK tools.
export ANDROID_HOME=~/scr/android-sdk-macosx
export PATH=$PATH:~/scr/android-sdk-macosx/platform-tools:~/scr/android-sdk-macosx/tools:~/scr/android-ndk-r10e


# Todo
# if [ 1 -eq 0 ]; then
# Refresh the bibledit-web source code in the assets.
rsync -a --exclude '*.o' --delete ../lib/* jni
pushd jni
./configure --enable-client --with-parallel-tasks=1 --enable-bare-browser
rm -f bibledit
rm -r autom4te.cache
rm dev
rm -f *.a
rm reconfigure
rm -f server
rm -f unittest
rm valgrind
rm -r xcode
rm -r executable
rm aclocal.m4
rm AUTHORS
rm ChangeLog
rm compile
rm config.guess
rm config.h.in
rm config.log
rm config.status
rm config.sub
rm configure
rm configure.ac
rm COPYING
rm depcomp
rm DEVELOP
rm INSTALL
rm install-sh
rm Makefile
rm Makefile.in
rm missing
rm NEWS
rm README
rm stamp-h1
popd
# Todo
# fi


# The following command saves all source files from Makefile.am to file.
# It uses several steps to obtain the result:
# * Obtain source files between the correct patterns.
# * Remove first line.
# * Remove last line.
# * Remove tabs.
# * Remove new lines.
# * Remove backslashes.
sed -n "/libbibledit_a_SOURCES/,/bin_PROGRAMS/p" jni/Makefile.am | tail -n +2 | sed '$d' | strings | tr -d '\n' | sed 's/\\//g' > jni/sources.txt


# Create Android.mk Makefile from Android.mk.am.
sed "s|SOURCEFILES|$(cat jni/sources.txt)|" jni/Android.am > jni/Android.mk
rm jni/sources.txt


# Todo add other libs like xml2 sqlite etc echo 'LOCAL_LDLIBS := -llog' >> jni/Android.mk

# Article about enabling C++11 features
# http://www.drdobbs.com/cpp/accessing-c11-features-of-the-android-nd/240168385

# Todo Also one can switch from clang to 4.8 (gcc) or else one can install the Android SDK on Linux and compile from Linux.

# Todo there is a narrowing conversion warning in jni/filter/UriCodec.cpp which might affect bin2hex and hex2bin conversion, check it still works.


# Using prebuilt libraries:
# http://stackoverflow.com/questions/9870435/how-can-i-link-prebuilt-shared-library-to-android-ndk-project




# Fix this: [aapt] (skipping file '.htaccess' due to ANDROID_AAPT_IGNORE pattern '.*')
# Rename all files ".htaccess" to "dot.htaccess".
# This is going to be reverted in the Java code during installation.
# find assets -type f -name '.*' | while read file
# do
#   basename="${file##*/}"
#   mv "$file" "${file%/*}/dotdot.${basename#.}"
# done


# Remove items from the setup that do not run on the android device, or are not needed there:
# * Skip crontab setup.
# sed -i '/timer.php/d' assets/external/bibledit-web/setup/step.php
# sed -i '/crontab.php/d' assets/external/bibledit-web/setup/step.php
# * Skip server / client mode, set client mode.
# sed -i '/client1.php/d' assets/external/bibledit-web/setup/step.php
# * No check on crontab and php cli binaries..
# sed -i  's/$crontab && $php/true/g' assets/external/bibledit-web/setup/binaries.php


# Retrieve the Bibledit-Web version number from the PHP sources and store it in the strings.xml.
# VERSION=`cat assets/external/bibledit-web/config/version.php  | grep version | cut -d'"' -f2`
# sed -i "/version_number/c\\  <string name=\"version_number\">$VERSION</string>" res/values/strings.xml


# Disable the Filter_Cli class as on Android it is not the shell that runs the regular tasks, but the web server.
# sed -i '/php_sapi_name/d' assets/external/bibledit-web/filter/cli.php


# Build native code.
# https://developer.android.com/tools/sdk/ndk/index.html
# Todo ndk-build clean
ndk-build
EXIT_CODE=$?
if [ $EXIT_CODE != 0 ]; then
  exit
fi
exit


# Clean binaries.
ant clean
EXIT_CODE=$?
if [ $EXIT_CODE != 0 ]; then
  exit
fi


# Create assets index.
# ant createAssetIndexExternal


# Build source.
ant debug
EXIT_CODE=$?
if [ $EXIT_CODE != 0 ]; then
  exit
fi


# Clear and uninstall previous version.
adb shell pm clear org.bibledit.android
adb shell pm uninstall -k org.bibledit.android


# Install it.
adb install -r bin/Bibledit-debug.apk


# Start it.
adb shell am start -a android.intent.action.MAIN -n org.bibledit.android/.MainActivity


